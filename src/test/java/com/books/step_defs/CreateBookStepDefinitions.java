package com.books.step_defs;

import com.books.context.TestContext;
import com.books.model.Book;
import com.books.services.CreateBookActions;
import com.books.utils.Utils;
import io.cucumber.datatable.DataTable;
import io.cucumber.java.en.Given;
import io.cucumber.java.en.Then;
import io.cucumber.java.en.When;

import java.util.Map;

public class CreateBookStepDefinitions {

    CreateBookActions actions = new CreateBookActions();
    private Book bookData;

    @Given("I have valid book data:")
    public void iHaveValidBookDataWith(DataTable dataTable) {
        bookData = Utils.createBookFromDataTable(dataTable);
        actions.setBookData(bookData);
    }

    @Given("I have invalid book data:")
    public void iHaveBookDataWith(DataTable dataTable) {
        Map<String, Object> bookDataMap = dataTable.asMap(String.class, Object.class);
        actions.setInvalidBookData(bookDataMap);
    }

    @Given("I have an empty book data")
    public void iHaveEmptyBookData() {
        actions.setBookData(null);
    }

    @When("I create a new book")
    public void iCreateNewBook() {
        if (bookData == null && actions.bookData == null) {
            actions.createBookWithEmptyBody();
        } else {
            actions.createBook();
            TestContext.getInstance().setBookId(actions.getBookIdFromResponse());
        }
    }

    @When("I create a new book with invalid data")
    public void iCreateNewBookWithInvalidData() {
            actions.createBookWithInvalidData();
    }

    @When("I create a new book with malformed data")
    public void iCreateNewBookWithMalformedData() {
        actions.createBookWithMalformedJson();
    }


    @Then("the response should contain the created book object")
    public void validateResponseContainsCreatedBookObject() {
        actions.validateResponseIsJsonObject();
        actions.validateCreatedBookDataMatchesInput();

    }

    @Then("the book ID should be auto-generated")
    public void validateBookIdIsAutoGenerated() {
        actions.validateBookIdIsAutoGenerated();
    }
}
